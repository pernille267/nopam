actual_part <- same_actual[i]
warning_id <- same_expected[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`)
return(output)
}
}
deep_comparison(1)
deep_comparison(2)
rbind(same_expected[4], same_actual[4], fill = T)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
expected_part <- same_expected[expected_id]
actual_part <- same_actual[i]
warning_id <- same_expected[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`)
return(output)
}
}
deep_comparison(2)
deep_comparison(3)
deep_comparison(4)
deep_comparison(5)
rbind(same_expected[4], same_actual[4], fill = T)
rbind(same_expected[2], same_actual[2], fill = T)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
if(length(expected_id) == 0){
return(NA)
}
expected_part <- same_expected[expected_id]
actual_part <- same_actual[i]
warning_id <- same_expected[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`)
return(output)
}
}
deep_comparison(1)
deep_comparison(2)
deep_comparison(3)
deep_comparison(33)
length(actual_warning_ids)
lapply(1:length(actual_warning_ids), deep_comparison)
output <- lapply(1:100, deep_comparison)
output
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
print(expected_id)
if(length(expected_id) == 0){
return(NA)
}
expected_part <- same_expected[expected_id]
actual_part <- same_actual[i]
warning_id <- same_expected[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`)
return(output)
}
}
output <- lapply(1:100, deep_comparison)
rbind(same_expected[6], same_actual[6], fill = T)
output[[6]]
rbind(same_expected[6], same_actual[4], fill = T)
output[[4]]
output <- lapply(1:100, deep_comparison)
rbind(same_expected[7], same_actual[5], fill = T)
output[[98]]
output[[98]]
rbind(same_expected[99], same_actual[98], fill = T)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
if(length(expected_id) == 0){
data.table("Warning Match" = FALSE)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE)
return(output)
}
}
output <- lapply(1:100, deep_comparison)
output
output <- lapply(1:1000, deep_comparison)
output
rbindlist(output, fill = TRUE)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
if(length(expected_id) == 0){
data.table("Warning Match" = FALSE)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE)
return(output)
}
}
output <- lapply(1:1000, deep_comparison)
rbindlist(output, fill = TRUE)
output <- lapply(1:length(actual_warning_ids), deep_comparison)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
print(paste(i, expected_warning_ids))
if(length(expected_id) == 0){
output <- data.table("Warning Match" = FALSE)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE)
return(output)
}
}
output <- lapply(1:length(actual_warning_ids), deep_comparison)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
print(paste(i, expected_id))
if(length(expected_id) == 0){
output <- data.table("Warning Match" = FALSE)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE)
return(output)
}
}
output <- lapply(1:length(actual_warning_ids), deep_comparison)
paste(2997, NULL)
which(actual_warning_ids[2997] == expected_warning_ids)
is.null(which(actual_warning_ids[2997] == expected_warning_ids))
length(which(actual_warning_ids[2997] == expected_warning_ids))
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
print(paste(i, expected_id))
if(length(expected_id) == 0){
output <- data.table("Warning Match" = FALSE)
return(output)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Yearly Median" = actual_part$`Yearly Median` == expected_part$`Yearly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = actual_part$`Monthly Median` == expected_part$`Monthly Median`,
"Peer Group Monthly Median" = actual_part$`Peer Group Monthly Median` == expected_part$`Peer Group Monthly Median`,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE)
return(output)
}
}
output <- lapply(1:length(actual_warning_ids), deep_comparison)
output_dt <- rbindlist(output, fill = TRUE)
output_dt
output_dt[`Warning Match`==TRUE]
slope_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "SMOOTHED")]
slope_warnings
same_slope_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "SMOOTHED")]
same_slope_warnings[, lapply(.SD, mean), by = `Warning Type`]
same_bias_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "YEAR")]
same_bias_warnings
same_bias_warnings[, lapply(.SD, mean), by = `Warning Type`]
same_peer_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "PEER")]
same_peer_warnings
same_peer_warnings[, lapply(.SD, mean), by = `Warning Type`]
rbind(same_expected[99], same_actual[98], fill = T)
rbind(same_expected[1], same_actual[1], fill = T)
stri_split("2.18, 2.114, 2.037", fixed = ", ")
stri_split("2.18, 2.114, 2.037", fixed = ", ")[[1]]
as.numeric(stri_split("2.18, 2.114, 2.037", fixed = ", ")[[1]])
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
if(length(expected_id) == 0){
output <- data.table("Warning Match" = FALSE)
return(output)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
actual_slopes <- as.numeric(stri_split(actual_part$`Evaluated Slopes`, fixed = ", ")[[1]])
expected_slopes <- as.numeric(stri_split(expected_part$`Evaluated Slopes`, fixed = ", ")[[1]])
diff_slopes <- round(abs(actual_slopes - expected_slopes) / actual_slopes * 100, 2L)
if(any(diff_slopes >= 0.01)){
print(diff_slopes)
}
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = actual_part$`Evaluated Slopes` == expected_part$`Evaluated Slopes`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = abs(actual_part$`Monthly Median` - expected_part$`Monthly Median`) / actual_part$`Monthly Median` < 1e-3,
"Yearly Median" = abs(actual_part$`Yearly Median` - expected_part$`Yearly Median`) / actual_part$`Yearly Median` < 1e-3,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = abs(actual_part$`Monthly Median` - expected_part$`Monthly Median`) / actual_part$`Monthly Median` < 1e-3,
"Peer Group Monthly Median" = abs(actual_part$`Peer Group Monthly Median` - expected_part$`Peer Group Monthly Median`) / actual_part$`Peer Group Monthly Median` < 1e-3,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE)
return(output)
}
}
output <- lapply(1:length(actual_warning_ids), deep_comparison)
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
if(length(expected_id) == 0){
output <- data.table("Warning Match" = FALSE)
return(output)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
actual_slopes <- as.numeric(stri_split(actual_part$`Evaluated Slopes`, fixed = ", ")[[1]])
expected_slopes <- as.numeric(stri_split(expected_part$`Evaluated Slopes`, fixed = ", ")[[1]])
diff_slopes <- round(abs(actual_slopes - expected_slopes) / actual_slopes * 100, 2L)
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = all(diff_slopes < 0.01),
"Warning Match" = TRUE,
"Expected Id" = expected_id,
"Actual Id" = i)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = abs(actual_part$`Monthly Median` - expected_part$`Monthly Median`) / actual_part$`Monthly Median` < 1e-3,
"Yearly Median" = abs(actual_part$`Yearly Median` - expected_part$`Yearly Median`) / actual_part$`Yearly Median` < 1e-3,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE,
"Expected Id" = expected_id,
"Actual Id" = i)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = abs(actual_part$`Monthly Median` - expected_part$`Monthly Median`) / actual_part$`Monthly Median` < 1e-3,
"Peer Group Monthly Median" = abs(actual_part$`Peer Group Monthly Median` - expected_part$`Peer Group Monthly Median`) / actual_part$`Peer Group Monthly Median` < 1e-3,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE,
"Expected Id" = expected_id,
"Actual Id" = i)
return(output)
}
}
deep_comparison <- function(i){
expected_id <- which(actual_warning_ids[i] == expected_warning_ids)
if(length(expected_id) == 0){
output <- data.table("Warning Match" = FALSE)
return(output)
}
expected_part <- expected_warnings[expected_id]
actual_part <- all_warnings_table[i]
warning_id <- expected_warnings[expected_id]$`Warning Type`
if(stri_detect_fixed(warning_id, pattern = "SMOOTHED")){
actual_slopes <- as.numeric(stri_split(actual_part$`Evaluated Slopes`, fixed = ", ")[[1]])
expected_slopes <- as.numeric(stri_split(expected_part$`Evaluated Slopes`, fixed = ", ")[[1]])
diff_slopes <- round(abs(actual_slopes - expected_slopes) / actual_slopes * 100, 2L)
output <- data.table("Warning Type" = warning_id,
"Evaluated Days" = actual_part$`Evaluated Days` == expected_part$`Evaluated Days`,
"Evaluated Slopes" = all(diff_slopes < 0.01),
"Warning Match" = TRUE,
"Expected Id" = expected_id,
"Actual Id" = i)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "YEAR")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = abs(actual_part$`Monthly Median` - expected_part$`Monthly Median`) / actual_part$`Monthly Median` < 1e-3,
"Yearly Median" = abs(actual_part$`Yearly Median` - expected_part$`Yearly Median`) / actual_part$`Yearly Median` < 1e-3,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Yearly Number of Results" = actual_part$`Yearly Number of Results` == expected_part$`Yearly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Yearly Start Date" = actual_part$`Yearly Start Date` == expected_part$`Yearly Start Date`,
"Warning Match" = TRUE,
"Expected Id" = expected_id,
"Actual Id" = i)
return(output)
}
else if(stri_detect_fixed(warning_id, pattern = "PEER")){
output <- data.table("Warning Type" = warning_id,
"Monthly Median" = abs(actual_part$`Monthly Median` - expected_part$`Monthly Median`) / actual_part$`Monthly Median` < 1e-3,
"Peer Group Monthly Median" = abs(actual_part$`Peer Group Monthly Median` - expected_part$`Peer Group Monthly Median`) / actual_part$`Peer Group Monthly Median` < 1e-3,
"Monthly Number of Results" = actual_part$`Monthly Number of Results` == expected_part$`Monthly Number of Results`,
"Peer Group Monthly Number of Results" = actual_part$`Peer Group Monthly Number of Results` == expected_part$`Peer Group Monthly Number of Results`,
"Monthly Start Date" = actual_part$`Monthly Start Date` == expected_part$`Monthly Start Date`,
"Peer Group Start Date" = actual_part$`Peer Group Start Date` == expected_part$`Peer Group Start Date`,
"Warning Match" = TRUE,
"Expected Id" = expected_id,
"Actual Id" = i)
return(output)
}
}
output <- lapply(1:length(actual_warning_ids), deep_comparison)
output_dt <- rbindlist(output, fill = TRUE)
output_dt
same_slope_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "SMOOTHED")]
same_bias_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "YEAR")]
same_peer_warnings <- output_dt[`Warning Match` == TRUE & stri_detect(`Warning Type`, fixed = "PEER")]
same_slope_warnings
same_slope_warnings[`Evaluated Days` == FALSE | `Evaluated Slopes` == FALSE]
rbind(expected_warnings[16771], all_warnings_table[16306], fill = T)
same_slope_warnings_but_different_values <- same_slope_warnings[`Evaluated Days` == FALSE | `Evaluated Slopes` == FALSE]
same_slope_warnings_but_different_values
rbind(expected_warnings[same_slope_warnings_but_different_values$`Expected Id`[1]],
all_warnings_table[same_slope_warnings_but_different_values$`Actual Id`[1]], fill = T)
rbind(expected_warnings[same_slope_warnings_but_different_values$`Expected Id`[2]],
all_warnings_table[same_slope_warnings_but_different_values$`Actual Id`[2]], fill = T)
rbind(expected_warnings[same_slope_warnings_but_different_values$`Expected Id`[3]],
all_warnings_table[same_slope_warnings_but_different_values$`Actual Id`[3]], fill = T)
rbind(expected_warnings[same_slope_warnings_but_different_values$`Expected Id`[4]],
all_warnings_table[same_slope_warnings_but_different_values$`Actual Id`[4]], fill = T)
same_bias_warnings_but_different_values <- same_bias_warnings[`Monthly Median` == FALSE | `Yearly Median` == FALSE]
same_bias_warnings_but_different_values
rbind(expected_warnings[same_bias_warnings_but_different_values$`Expected Id`[4]],
all_warnings_table[same_bias_warnings_but_different_values$`Actual Id`[4]], fill = T)
analytes_dt[`Analyte Name` == "Alkaline Phosphatase" & `Instrument Code` == "A82NSK" & `Measured At` <= "2022-03-28" & `Measured At` >= "2022-02-27"]
analytes_dt[`Analyte Name` == "Alkaline Phosphatase" & `Instrument Code` == "A82NSK" & `Measured At` <= "2022-03-28" & `Measured At` >= "2022-02-27"]$`Hypo Percentage` |> median(na.rm = TRUE)
rbind(expected_warnings[same_bias_warnings_but_different_values$`Expected Id`[4]],
all_warnings_table[same_bias_warnings_but_different_values$`Actual Id`[4]], fill = T)
